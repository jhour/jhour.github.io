
/*Scroll snap*/
.navegacion-principal,
.servicio,
.formulario{ /*estamos creando una seccion para navegar por la web*/
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

/*GLOBAL*/
:root{ /*es un pseudo-elementos (no existe en el htlm) - conocido como variables de css*/
    --blanco : #ffffff;
    --oscuro : #212121;
    --primario : #ffc107;
    --secundario : #0097a7;
    --gris: #757575;
    --grisClaro: #DFE9F3;

}

html{
    font-size: 62.5%;
    box-sizing: border-box;/*se usa cuando una vez determinado el tamaño de un área (768px) y luego aplicas padding (20px), el padding ya no afectará a lo establecido inicialmente (Seguirá en 768 y no 808px)*/
    scroll-snap-type: y mandatory; /*"y" es el eje y - "x" es el eje x*/
}

/*Los "*" (asterisco - selector universal) significa tomar todo el código y aplicarlo, la "," (coma) significa que las 3 clases poseen el mismo atributo, asi que en véz de escribirlos aparte simplemente se le escribe a los 3 usando la coma*/
/*Before y after son pseudoelementos que no existen como tal para HTML pero si para CSS, y van antes o despues de un determinado elemento*/
*, *:before, *:after { /*este codigo va junto con html{box-sizing:}, usado para que no se modifique el tamaño a pesar de aplicar un padding posteriormente*/
    box-sizing: inherit;
}


body{  /*todo lo que digites aqui en body, se aplicará a todo el cuerpo de la página*/
    font-size: 16px; /* 1 rem = 10 px*/
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%); /*: linear-gradiente(hacia donde, color inicial, color final)*/
}
.titulo{
    text-align: center;
    font-size: 3.8rem;  /*tamaño del texto*/

}

.titulo span{
    font-size: 2rem;
}

/*UTILIDADES usar cuando se quiere ingresar 1 o 2 caracteristicas nada más a una determinada etiqueta, es muy útil ev vez de crear clases y más clases*/

.w-sm-100{
    width: 100%;
}

@media (min-width: 768px){      
    .w-sm-100{
        width: auto;
    }
}

.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end; /*alinear hacia la derecha*/
}


/*CONTENEDOR Y BOTONES*/

.contenedor{
    max-width: 120rem;  /*toma como maximo 120rem solo en caso sea necesario*/
    /*
    margin-top: 0; //espacio arriba cero
    margin-right: auto;  //espacio derecha (automático)
    margin-bottom: 0;  //espacio abajo cero
    margin-left: auto;  //espacio izquierda (automático)
    
    //Todo lo que está en estas 4 lineas es expresada en la línea margin de abajo*/
    margin: 0 auto; /*margin: 0 auto 0 auto, asi como se escribe, pero como 0 y auto se repiten entonces solo ponemos uno de ellos*/
}

.contenedor h2{
    display: flex;
    justify-content: center;
}

.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;  /*Distancia entre los margenes*/
    font-size: 2rem;  /*tamaño de la fuente*/
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold; /*negrita*/
    border-radius: 2.5rem;  /*bordes de el boton*/
    text-align: center;
    border: none;

}

@media (min-width: 768px){
    .boton{
        width: auto;
    }
}

.boton:hover{ /*usar para que aparesca la mano cuando te colocas sobre un enlace*/
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/*NAVEGACION PRINCIPAL*/
.nav-bg{  /*utility first (utilidad) por que solo tiene una propiedad/atributo dentro*/
    background-color: var(--secundario);
}

.navegacion-principal{ /*modulos*/
    display: flex; /*se invoca para poder modificar la posicion de la navegacion*/
    flex-direction: column;  /*las palabras que estén en columna*/   
} 

@media (min-width: 768px){ /*tamaño de una tablet a más*/
    .navegacion-principal{ /*en caso la pantalla esté a más de 768px, entonces que las palabras (navegacion) esté en fila*/
        flex-direction: row; /*barra de navegacion en linea*/
        justify-content: space-between; /*se usa para que haya un espacio distribuido equitativamente horizontalmente entre todas las palabras (navegacion), hay muchos tipos de poner espacio en medio, busca*/
    }
}

.navegacion-principal a{ /*modulo enlace*/
    display: block;  /*la barra de navegacion en bloque*/
    text-align: center;  /*centrar el bloque*/
    /*las dos lineas de arriba funcionan solo cuando la pantalla está por debajo de 768px, si está más lo que prima es el horizontal (justify-content)*/
    
    color: var(--blanco);
    text-decoration: none; /*eliminar el subrayado en las palabras inicio, sobre nosotros, cliente, contacto*/
    font-size: 2rem; /*tamaño de la fuente*/
    font-weight: 700; /*fuente negrita*/

    /*margin-top: 10rem;  /separacion desde donde termina el elemento hacia afuerza 
    padding-top: 10rem; / es para rellenar toda la sepacion que se generó*/  
    padding: 1rem; /*es lo mismo que escribir padding: 1rem,1rem,1rem,1rem; sive para rellenar el espacio*/
    
}

.navegacion-principal a:hover{  /*hover=flotar*/
    background-color: var(--primario);
    color: var(--oscuro);
}

.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;  /*es para que la imagen de no repita varias veces para rellenar la pantalla*/
    background-size: cover; /*es para rellenar con una imagen todo el ancho de la pantalla*/
    height: 450px;
    /*padding: 20px;  el padding afecta al poner la nitidez en la imagen*/
    position: relative; /*clase padre debe ser relativo para que actue como un mapa (imagen)*/
    margin-bottom: 2rem;
}

.contenido-hero{
    position: absolute;/*clase hija debe ser absoluta para que use las coordenadas del mapa (imagen)*/
    /*background-color: rgba(0,0,0, .7); Uso antiguo, usado para cambiar la tonalidad de la imagen (red, green, blue, nitidez)*/
    background-color: rgb(0 0 0 / 70%);  /*Actual, este método es el mismo que el anterior*/
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center; /*Alienacion horizontal*/
    justify-content: center;  /*Alineacion vertical*/
}

.contenido-hero h2, .contenido-hero p{ /*por aparecer al "," (coma) entonces lo escrito abajo se aplica a ambas etiquetas*/
    color: var(--blanco);
    text-align: center;
}

/*Servicios*/

@media (min-width: 768px){
    .servicios{
        display: grid; /*flex: es el display de flexbox, grid: es el display de css grid*/
        grid-template-columns: 1fr 1fr 1fr; /*(fraccion del espacio), es lo mismo a decir: 
        grid-template-columns: 33.3% 33.3% 33.3%;
        grid-template-columns: repeat(3, 1fr)  */

        column-gap: 5rem; /*separación entre una columna con otra*/
    } 
}

.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3{  /*se aplica solamente a "h3" porque es un enlace*/
    color: var(--secundario);
    
}

.servicio p{  /*se aplica solamente a "p" porque es un enlace (accede a etiqueta (p) a través de una clase (servicio))*/
    line-height: 2; /*altura entre las lineas (interlineado)*/
    font-weight: normal; /* o sino font-weight: 400; que es lo mismo*/,
    
}

.servicio .iconos{ /*acceder a una clase hija (iconos), a partir de una clase padre (servicios)*/
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    
}

/*CONTACTO*/

.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%); /*min toma dos parametros, cuando la pantalla se agranda o reduce, se aplica el MENOR tamaño (60rem que es como un 60% o sino el 100% que pinta toda la pantalla)*/
    margin: 0 auto; /*usar margin para centrar texto horizontalmente. Aplicar justify-content solo cuando se invoque a un flex*/
    padding: 2rem;
    border-radius: 1rem;


}

.formulario fieldset{
    border: none; /*desaparecer los bordes*/
}

.formulario legend{
    color: var(--primario);
    text-transform: uppercase;
    font-size: 2rem; /*tamaño de la fuente*/
    font-weight: 700; /*fuente negrita*/
    text-align: center;
    margin-bottom: 2rem;
}

@media (min-width: 768px){
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr); /*es lo mismo que (50%, 50%)*/
        grid-template-rows: auto auto 20rem; /*al inicio se crea matriz 2x2, pero con esta línea se está creando una 3° fila de tamaño 20rem*/
        column-gap: 1rem; /*separación entre columnas*/

    }  
}

.campo:nth-child(3),
.campo:nth-child(4){ /*1) nombre, 2)telefono, 3)correo, 4)mensaje; usar nth-child cuando existan muchas clases con el mismo nombre (en este caso "campo")*/
    grid-column: 1 / 3; /*ayuda a modificar los campos que va a ocupar dentro de la matriz, en este caso "correo va a ir desde la linea-columna 1 hasta la linea-columna 3"*/
    /*grid-row: 3 / 4 , en este caso esto nos ayuda a mover el recuadro a la ultima parte de la matriz, es decir su ubicación es desde linea-fila 3 hasta linea-fila 4 (osea 3° fila)*/
}

.campo{
    margin-bottom: 1rem;
}

.campo label{
    color: var(--blanco);
    font-weight: bold; /*fuente negrita*/
    margin-bottom: .5rem;
    display: block;
}

.campo textarea{
    height: 20rem;
}

.input-text{
    width: 100%; /*ancho de los cuadros donde se escribe, que lleguen hasta el borde del cuadro plomo*/
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/*FOOTER*/
.footer{
    text-align: center;
}

/*
h1.titulo span{   espeficidad
    font-size: 2rem;
    color: red
}   */



